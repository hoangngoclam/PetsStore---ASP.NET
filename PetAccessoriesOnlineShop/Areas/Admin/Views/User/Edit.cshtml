@model Model.EF.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Edit User
}

<div class="row">
    <div class="col-12">

        @* edit Html.BeginForm("Edit", "User", FormMethod.Post)*@
        @using (Html.BeginForm("Edit", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal border pt-3 pl-3">
                <h4> Add New User</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @* Update Password *@
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-user" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Update Name *@
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-user" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Update Update Address *@
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Address, new { htmlAttributes = new { @class = "form-control form-control-user" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                @* Update Email *@
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-user" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                @* Update Phone *@
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control form-control-user" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                @* Update Status *@
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-10">
                            @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control form-control-user" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-3"></div>
                        <div class="col-9">
                            <input type="submit" value="Edit" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
